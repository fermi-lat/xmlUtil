<!-- $Header: /nfs/slac/g/glast/ground/cvs/xmlUtil/xml/flightDerivedConstants.xml,v 1.9 2001/12/10 19:36:02 jrb Exp $ -->
    <derived>
      <derCategory name="derCAL" save="true">
<overview>Derived constants specific to CAL.
</overview>

        <const name="CALMaxLayer" uType="count" >
          <notes>upper limit on Cal layer idfield value</notes>
          <minus>
            <refer refTo="CALnLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>

    <!-- diodePosXOffset  = (CsILength + diodeX)/2 -->
        <const name="diodePosXOffset" >
          <notes>X-offset of a diode relative to the center of the CsI crystal</notes>
          <quo>
            <add>
              <refer refTo="CsILength" />
              <refer refTo="diodeX" />
            </add>
            <const value="2" uType="count"/>
          </quo>
        </const>
        <const name="diodeNegXOffset" >
          <notes>X-offset of diode on negative end of a crystal</notes>
          <uminus><refer refTo="diodePosXOffset" /> </uminus>
        </const>

        <const name="cellVertWallHalfThick">
          <notes>convenience</notes>
          <mul> 
            <refer refTo="cellVertWallThick" /> 
            <const value="0.5" uType="count" /> 
          </mul>
        </const>

        <const name="cellHorWallHalfThick">
          <notes>convenience</notes>
          <mul> 
            <refer refTo="cellHorWallThick" /> 
            <const value="0.5" uType="count" /> 
          </mul>
        </const>


        

<!-- dimensions for log envelope volume -->
        <const name="CsIEnvX">  
          <notes>Long dimension of envelope containing a CsI crystal and its diodes</notes>
          <add>
            <refer refTo="CsILength" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="diodeX" />
            </mul>
          </add>
        </const>

        <const name="CsIEnvY">  
          <notes>Transverse dimension of envelope containing a CsI 
                  crystal and its diodes</notes>
          <refer refTo="cellHorPitch" />
        </const>

        <const name = "CsIEnvZ" >
          <notes>Height of the envelope containing a CsI crystal and 
                 its diodes</notes>
          <refer refTo="cellVertPitch" />
        </const>

        <const name="cellIntWallZ">
          <notes>Height of vertical wall, up to but not including 
               horizontal walls</notes>
          <minus>
            <refer refTo="CsIEnvZ" />
            <refer refTo="cellHorWallThick" />
          </minus>
        </const>

<!-- offsets for positioning cell walls inside the cel -->
        <const name="cellHorWall_dz">
          <notes>Z position rel. to cell of upper horiz. wall</notes>
          <mul>
            <const value="0.5" />
            <minus>
              <refer refTo="cellVertPitch" />
              <refer refTo="cellHorWallHalfThick" />
            </minus>
          </mul>
        </const>

        <const name="cellHorWall_dzn">
          <notes>Z position rel. to cell of lower horiz. wall</notes>
          <uminus>
            <refer refTo="cellHorWall_dz" />
          </uminus>
        </const>

        <const name="cellVertWall_dy">
          <notes>Y displacement rel. to cell of vertical cell wall
(here Y means perp. to height and length directions)</notes>
          <mul>
            <const value="0.5" />
            <minus>
              <refer refTo="cellHorPitch" />
              <refer refTo="cellVertWallHalfThick" />
            </minus>
          </mul>
        </const>

        <const name="cellVertWall_dyn" >
          <notes>Neg. of Y  displacement rel. to cell of vertical cell wall
(here Y means perp. to height and length directions)</notes>
          <uminus>
            <refer refTo="cellVertWall_dy" />
          </uminus>
        </const>
        
<!-- the following should be the maximum of the length of a single
     CsIElement and the transverse distance across the whole 
     collection of CsIElements in a layer, so
      max(CsIEnvX, nCsIPerLayer*CsIEnvY), which ends up being
      CsIEnvX in this case    --> 
        <const name = "CALLayerTrans" >
          <notes>Transverse dimension of a CAL layer: 
                 max(CsiEnvX, nEltPerlayer*CsIEnvY)</notes>
          <max>
            <refer refTo="CsIEnvX" />
            <mul>
              <refer refTo="nCsIPerLayer" />
              <refer refTo="CsIEnvY" />
            </mul>
          </max>
	</const>

        <const name="CALTransvGap">
          <notes>New from Eric/Sacha.  Gap between side of log + C-cell 
                [composite cell??] and CAL side wall</notes>
          <mul>
            <const value="0.5" />
            <minus>
              <refer refTo="CALModuleWidth" />
              <add>
                <mul>
                  <refer refTo="nCsIPerLayer" />
                  <refer refTo="cellHorPitch" />
                </mul>
                <mul>
                  <const value="2.0" />
                  <add>
                    <refer refTo="CALSideWallThick" />
                    <refer refTo="cellSideReinfThick" />
                  </add>
                </mul>
              </add>
            </minus>
          </mul>
        </const>

        <const name="cellHorGap">
          <notes>New from Eric/Sacha.  Horizontal gap between xtal
                 and cell wall.</notes>
          <mul>
            <const value="0.5" />
            <minus>
              <minus>
                <refer refTo="cellHorPitch" />
                <refer refTo="CsIWidth" />
              </minus>
              <refer refTo="cellVertWallThick" />
            </minus>
          </mul>
        </const>

        <const name="cellVertGap" >
          <notes>New from Eric/Sacha.  Vertical gap between xtal
                 and cell wall.</notes>
          <mul>
            <const value="0.5" />
            <minus>
              <minus>
                <refer refTo="cellVertPitch" />
                <refer refTo="CsIHeight" />
              </minus>
              <refer refTo="cellHorWallThick" />
            </minus>
          </mul>
        </const>

<!-- Following comes from CAL docs of 31 May, 2001 -->
        <const name="CALCylLength">
          <notes>Length of cylindrical supports for side walls</notes>
          <add>
            <refer refTo="CALTransvGap" />
            <refer refTo="CALSideWallThick" />
            <uminus>
              <refer refTo="CALSideWallOuterThick" />
            </uminus>
          </add>
        </const>

<!-- the following includes cal layers and inter-layer spacers, but
     not frame, grid between cal and tkr, etc. 
     Hence it's just nlayer*cellVertPitch 
-->
        <const name="CALTotalZ">
<notes>Includes cal layers and inter-layer walls but not frame, 
grid, etc. (may be superseded by info from Eric)</notes>
          <mul>
            <refer refTo="CALnLayer" />
            <refer refTo="cellVertPitch" />
          </mul>
        </const>


    <!-- additional (derived) dimensions for frame -->
        <const name = "CALFrameWidth">
          <notes>transverse dimension for cal frame (one tower)</notes>
          <add>
            <refer refTo="CALLayerTrans" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="CALFrameSideThick" />
            </mul>
          </add>
        </const>
  
    <!--  Height of side pieces is just CALTotalZ -->

    <!-- Height of entire frame must also include thickness of top&bottom -->
	<const name="CALFrameHeight"  >
          <notes>Height of entire frame</notes>
	  <add>
	    <refer refTo="CALTotalZ" />
            <refer refTo="CALTopFrameZ" />
            <refer refTo="CALBottomFrameZ" />
	  </add>
	</const>

	<const name = "CALFrameSide_d"> 
          <notes>Displacement of a side frame relative to tower</notes>
	  <mul>
	    <add>
	      <refer refTo="CALFrameSideThick" />
	      <refer refTo= "CALFrameWidth" />
	    </add>
	    <const value="0.5" uType="count" />
	  </mul>
	</const>

	<const name ="CALFrameSide_dN" >
          <notes>Displacement of a side frame relative to tower</notes>
	  <uminus>
	    <refer refTo="CALFrameSide_d" />
	  </uminus>
	</const>

<!-- May want to replace this with separate definitions for
     top and bottom frame displacements -->
	<const name="CALFrameTB_d" > 
          <notes>Displacement of top and bottom of frame, relative to 
                the whole.</notes>
	  <mul>
	    <add>
	      <refer refTo= "CALFrameTBThick" />
	      <refer refTo="CALTotalZ" />
	    </add>
	    <const value="0.5" uType="count"/>
	  </mul>
	</const>
	    
	<const name="CALFrameTB_dN" >
          <notes>Neg of displacement of top and bottom of frame, relative to 
                the whole.</notes>
	  <uminus>
	    <refer refTo="CALFrameTB_d" />
	  </uminus>
	</const>

        <const name="CALTopFrameCutoutWidth" >
          <notes>Dimension of cutout in CAL top frame pieces</notes>
          <minus>
            <refer refTo="CALModuleWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="CALTopFrameWidth" />
            </mul>
          </minus>
        </const>

        <const name="CALBottomFrameCutoutWidth" >
          <notes>Dimension of cutout in CAL bottom frame pieces</notes>
          <minus>
            <refer refTo="CALModuleWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="CALBottomFrameWidth" />
            </mul>
          </minus>
        </const>

<!-- Make sure values for CALStructural field are distinct from layer #'s -->
        <const name="eBottomFrame" uType="count">
          <notes>For use in identifiers</notes>
          <add>
            <refer refTo="CALnLayer" />
            <const value="10" uType="count" />
          </add>
        </const>

        <const name="eTopFrame" uType="count">
          <notes>For use in identifiers</notes>
          <add>
            <refer refTo="eBottomFrame" />
            <const value="1" uType="count" />
          </add>
        </const>

        <const name="eBottomPlate" uType="count">
          <notes>For use in identifiers</notes>
          <add>
            <refer refTo="eTopFrame" />
            <const value="1" uType="count" />
          </add>
        </const>

        <const name="eTopPlate" uType="count">
          <notes>For use in identifiers</notes>
          <add>
            <refer refTo="eBottomPlate" />
            <const value="1" uType="count" />
          </add>
        </const>

      </derCategory>

      <derCategory name="derTKR"  save="true" >
        <overview>Derived constants specific to tracker</overview>
	<const name="TKRTrayWidth" >
	  <minus>
	    <refer refTo="TKRWidth" />
	    <mul>
	      <const value="2" uType="count"/>
	      <refer refTo="TKRElectGap" />
	    </mul>
	  </minus>
	</const>

        <const name="waferPitch" >
          <notes> Distance between centers of adjacent wafers in 
                  a ladder</notes>
          <add>
            <refer refTo="SiWaferSide" />
            <refer refTo="ssdGap" />
          </add>
        </const>

        <const name="ladderPitch" >
          <notes> Distance between centers of adjacent wafers in 
                  adjacent ladders</notes>
          <add>
            <refer refTo="SiWaferSide" />
            <refer refTo="ladderGap" />
          </add>
        </const>

        <const name="TKRBiasWidth" >
          <notes>Transverse dimension of bias board (for now assuming
          it's a square</notes>
          <refer refTo="faceWidth" />
        </const>

        <const name="TKRCloseoutThick" >
          <notes>Z dimension of closeout for trays other than top
                 and bottom</notes>
          <refer refTo="coreThick" />
        </const>

        <const name="TKRCloseoutThickOuter" >
          <notes>Z dimension of closeout for top and bottom trays</notes>
          <refer refTo="coreThickOuter" />
        </const>

        <const name="TKRCloseoutLen" >
          <notes>Transverse length of longer of (imaginary) closeout 
                pieces, just the same as the face sheet</notes>
          <refer refTo="faceWidth" />
        </const>

        <const name="TKRCloseoutLenShort" >
          <notes>Transverse length of shorter of (imaginary) closeout
                 pieces</notes>
          <minus>
            <refer refTo="TKRCloseoutLen" />
            <mul>
              <refer refTo="TKRCloseoutWidth" />
              <const value="2" uType="count" />
            </mul>
          </minus>
        </const>
 
        <const name="TKRCoreWidth" >
          <notes>Length of sides for core </notes>
          <refer refTo="TKRCloseoutLenShort" />
        </const>
        
        <const name="TKRCloseout_dt" >
          <notes>Transverse (x or y) offset of closeout pieces 
                 w.r.t. tray</notes>
          <mul>
            <minus>
              <refer refTo="TKRCloseoutLen" />
              <refer refTo="TKRCloseoutWidth" />
            </minus>
            <const value="0.5" uType="count" />
          </mul>
        </const>

        <const name="TKRCloseout_dtn" >
          <notes>Negative transverse offset of closeout pieces</notes>
          <uminus>
            <refer refTo="TKRCloseout_dt" />
          </uminus>
        </const>

        <const name="biasGlueThick" >
          <notes>Thickness of upper bias board and glue above it</notes>
          <add>
            <refer refTo="glueSiThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueDefThick" />
          </add>
        </const>

        <const name="TKRTopFaceRegZ" >
           <notes>Thickness of combined glue+ face-sheet + glue +
                  bias-board + glue for non-superGLAST trays</notes>
          <add>
            <refer refTo="glueCoreThick" />
            <refer refTo="faceThick" />
            <refer refTo="glueDefThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueSiThick" />
          </add>
        </const>

        <const name="TKRTopFaceSupZ" >
           <notes>Thickness of combined glue+ face-sheet + glue +
                  bias-board + glue for superGLAST trays</notes>
          <add>
            <refer refTo="glueCoreThick" />
            <refer refTo="faceSupThick" />
            <refer refTo="glueDefThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueSiThick" />
          </add>
        </const>

        <const name="TKRBotFaceRegZ" >
          <notes>Thickness of bottom face sheet and surrounding glue
                 for non-superGLAST trays</notes>
          <add>
            <refer refTo="glueCoreThick" />
            <refer refTo="faceThick" />
            <refer refTo="glueDefThick" />
          </add>
        </const>

        <const name="TKRBotFaceSupZ" >
          <notes>Thickness of bottom face sheet and surrounding glue
                 for superGLAST trays</notes>
          <add>
            <refer refTo="glueCoreThick" />
            <refer refTo="faceSupThick" />
            <refer refTo="glueDefThick" />
          </add>
        </const>

        <const name="TKRFaceMinZ" >
          <notes>Thickness of regular face sheet and glue attaching
                 it to core/closeout</notes>
          <add>
            <refer refTo="glueCoreThick" />
            <refer refTo="faceThick" />
          </add>
        </const>


<!--
        <const name="faceGlueRegThick" >
          <notes>Thickness of face sheet and glue attaching it to
                 core/closeout for regular layers  **OBSOLETE** </notes>
          <add>
            <refer refTo="faceThick" />
            <refer refTo="glueCoreThick" />
          </add>
        </const>

        <const name="faceGlueSupThick" >
          <notes>Thickness of face sheet and glue attaching it to
                 core/closeout for superGLAST layers  **OBSOLETE** </notes>
          <add>
            <refer refTo="faceSupThick" />
            <refer refTo="glueCoreThick" />
          </add>
        </const>
 -->


        <const name="TKRMaxNoCnv" uType="count">
          <notes>Tray number of most forward no-converter tray</notes>
          <minus>
            <refer refTo="numNoCnvTrays" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="TKRMaxReg" uType="count" >
          <notes>Tray number of most forward "regular" tray. Top
                 tray doesn't qualify since it has no top Si.</notes>
          <minus>
            <refer refTo="maxTray" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="nWaferAcrossM1" uType="count">
          <notes>Used as bound for possible idField values</notes>
          <minus>
            <refer refTo="nWaferAcross" />
            <const value="1" uType="count" />
          </minus>
        </const>


      </derCategory>

      <derCategory name="misc">
        <overview>Stuff that doesn't fit elsewhere</overview>

    <!-- a couple convenience numbers -->
        <const name="xNumM1" uType="count">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="xNum" />
            <const value="1" uType="count" />
          </minus>
        </const>
        <const name="yNumM1" uType="count">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="yNum" />
            <const value="1" uType="count" />
          </minus>
        </const>


        <const name="nLadderM1" uType="count" >
          <notes>Upper limit on ladder idField values</notes>
          <minus>
            <refer refTo="nWaferAcross" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxLog" uType="count" >
          <notes>Upper limit on CsI log idField values</notes>
          <minus>
            <refer refTo="nCsIPerLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxTray" uType="count" >
          <notes>Upper limit on tray idField values</notes>
          <minus>
            <refer refTo="numTrays" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxTrayM1" uType="count" >
          <notes>max tray number of tray with bottom Si wafers</notes>
          <minus>
            <refer refTo="numTrays" />
            <const value="2" uType="count" />
          </minus>
        </const>

        <const name="maxWaferStripNum" uType="count" >
          <notes>Upper limit on strip number within a wafer</notes>
          <minus>
            <refer refTo="stripPerWafer" />
            <const value="1" uType="count" />
          </minus>
        </const>

<!-- These might not be quite right.  Check that frame is
     accounted for. -->
	<const name="towersTotalX">
          <notes>Meant to be X width of the array of towers, but doesn't 
(yet) include grid</notes>
          <mul>
            <refer refTo="xNum" />
            <refer refTo="towerPitch" />
          </mul>
        </const>

	<const name="towersTotalY">
          <notes>Meant to be Y width of the array of towers, but doesn't 
(yet) include grid</notes>
          <mul>
            <refer refTo="yNum" />
            <refer refTo="towerPitch" />
          </mul>
        </const>

<!-- Compute total Z by adding up
            CAL height
            cal-tracker gap
            (ntray-1)* inter-tray spacing
            Z of top half of top tray, bottom half of bottom tray
              (which is the same as Z of a single outer tray)
-->
	<const name="towersTotalZ">  
<notes>Height of cal (stay clear) + height of tracker (S-C) + gap between
</notes>
          <add>
            <refer refTo="CALVertStayClear" />
            <refer refTo="calTrackerGap" />
            <refer refTo="TKRVertStayClear" />
          </add>                               
        </const>

        <const name="towersTotalHalfZ">
          <notes>Convenience</notes>
          <quo>
            <refer refTo="towersTotalZ" />
            <const value="2" uType = "count" />
          </quo>
        </const>

        <const name="CAL_dz" >
          <notes>Offset of CAL within single-tower volume</notes>
          <add>
            <uminus>
              <refer refTo="towersTotalHalfZ" />
            </uminus>
            <quo>
              <refer refTo="CALVertStayClear" />
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="TKR_dz" >
          <notes>Offset of TKR within single-tower volume</notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <quo>
              <refer refTo="TKRVertStayClear" />
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="gridFlange_dz">
          <notes>Z-Offset of grid flange pieces within single-tower volume.
          </notes>
          <minus>
            <refer refTo="towersTotalHalfZ" /> <!-- start at top -->
            <add>
              <refer refTo="TKRVertStayClear" />
              <quo>
                <refer refTo="NADGridFlangeZ" />
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="gridWeb_dz" >
          <notes>Z-Offset of grid web pieces within single-tower volume</notes>
          <minus>
            <refer refTo="gridFlange_dz" />
            <quo>
              <add>
                <refer refTo="NADGridFlangeZ" />
                <refer refTo="NADGridWebZ" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="gridFlange_dt" >
          <notes>Transverse offset of per-tower grid flange pieces</notes>
          <quo>
            <minus>
              <refer refTo="towerPitch" />
              <refer refTo="NADGridFlangeInnerHalf"/>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="gridFlange_dtn" >
          <notes>Negative transverse offset of per-tower grid flange pieces</notes>
          <uminus>
            <refer refTo="gridFlange_dt" />
          </uminus>
        </const>

        <const name="gridWeb_dt" >
          <notes>Transverse offset of per-tower grid web pieces</notes>
          <quo>
            <minus>
              <refer refTo="towerPitch" />
              <refer refTo="NADGridWebInnerHalf"/>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="gridWeb_dtn" >
          <notes>Negative transverse offset of per-tower grid web pieces</notes>
          <uminus>
            <refer refTo="gridWeb_dt" />
          </uminus>
        </const>
        
        <const name="LATGridFlange_dt" >
          <notes>Transverse offset of LAT-wide grid flange pieces</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <refer refTo="NADGridFlangeOutsideWidth" />
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="LATGridFlange_dtn" >
          <notes>Neg. transverse offset of LAT-wide grid flange pieces</notes>
          <uminus>
            <refer refTo="LATGridFlange_dt" />
          </uminus>
        </const>
        
        <const name="LATGridWeb_dt" >
          <notes>Transverse offset of LAT-wide grid web pieces</notes>
          <quo>
            <minus>
              <refer refTo="NADGridWebWidth" />
              <refer refTo="NADGridWebOutsideWidth" />
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="LATGridWeb_dtn" >
          <notes>Neg. transverse offset of LAT-wide grid web pieces</notes>
          <uminus>
            <refer refTo="LATGridWeb_dt" />
          </uminus>
        </const>
      </derCategory>

      <derCategory name="derACD" save="true" >
        <overview>Derived constants specific to the ACD</overview>
        <const name="ACDTopTotalX">
          <notes>Total X width to be covered by top tiles</notes>
          <add>
            <refer refTo="towersTotalX" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDTKRStayClear" />
            </mul>
          </add>
        </const>


        <const name="ACDTotalXSide" >
          <notes>total length (in x direction) to be covered by a 
                row of side tiles</notes>
          <add>
<!--            <refer refTo="towersTotalX" /> -->
            <refer refTo="ACDTopTotalX" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDSideSupToTile" />
            </mul>
            <refer refTo="tileThickness" />
            <uminus>
               <refer refTo="topTileGap" />
            </uminus>
          </add>
        </const>

        <const name="ACDTotalX">
          <notes>max extent in x of all of ACD (not just top)</notes>
          <add>
            <refer refTo="ACDTotalXSide" />
            <refer refTo="tileThickness" />
            <refer refTo="topTileGap" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="tapeThickness" />
                <refer refTo="tapeGap" />
              </add>
            </mul>
          </add>
        </const>

<!--
        <const name="ACDTotalX">
          <notes>max extent in x of all of ACD (not just top)</notes>
          <add>
            <refer refTo="ACDTopTotalX" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="tileThickness" />
                <refer refTo="tapeThickness" />
                <refer refTo="tapeGap" />
                <refer refTo="ACDSideStandoff" />
              </add>
            </mul>
          </add>
        </const>
 -->

        <const name="XTopTileMax" uType="count">
          <notes>Convenience for idField definitons</notes>
          <minus>
            <refer refTo="numXTopTiles" />
            <const value="1.0" />
          </minus>
        </const>

        <const name="YTopTileMax" uType="count">
          <notes>Convenience for idField definitons</notes>
          <minus>
            <refer refTo="numYTopTiles" />
            <const value="1" uType="count" />
          </minus>
        </const>


        <const name="ACDLongRowMin" uType="count" >
          <notes>row number of first long ACD side row</notes>
          <add>
            <refer refTo="ACDShortRowMax" />
            <const value="1" uType="count" />
          </add>
        </const>

        <const name="ACDLongRowMax" uType="count" >
          <notes>row number of last long ACD side row</notes>
          <minus>
            <refer refTo="numSideRows" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDShortMaxCol" uType="count">
          <notes>Column number of last tile in a short row</notes>
          <minus>
            <refer refTo="numPerSideRowShort" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDLongMaxCol" uType="count">
          <notes>Column number of last tile in a long row</notes>
          <minus>
            <refer refTo="numPerSideRowLong" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDTopXWidth">
          <notes>X dimension for a top tile. Must be derived from total width top and other things.  Tiles overlap in X.</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalX"/>
              <mul>
                <refer refTo="XTopTileMax" />
                <refer refTo="topOverlap" />
              </mul>
            </add>
            <refer refTo="numXTopTiles" />
          </quo>
        </const>

        <const name="ACDTopYWidth">
          <notes>Y dimension for a top tile.  Derived from total width, size of gaps.</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalY"/>
              <uminus>
                <mul>
                  <add>
                    <const value="1" uType="count" />
                    <refer refTo="numYTopTiles" />
                  </add>
                  <refer refTo="topTileGap" />
                </mul>
              </uminus>

            </add>
            <refer refTo="numYTopTiles" />
          </quo>
        </const>

<!-- Compute Z for the smallest box containing the top tiles + tape.
     From Heather's first diagram, this is

      3*tileThickness + tapeGap + tapeThickness

     May have to do this over for a box containing support as well,
     but so far have no information for support                   -->
        <const name="ACDTopZwidth" >
          <add>
            <mul>
              <const value="3" uType="count" /> <!-- (nRow+1)/2 -->
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="tapeGap" />
            <refer refTo="tapeThickness" />
          </add>
        </const>

<!-- following are convenient to have.. -->
        <const name = "sideOverlapToTopTape" >
          <notes>Distance from top of side tile to top of top tape</notes>
          <minus>
            <refer refTo="sideOverlap" />
            <add>
              <refer refTo="tapeThickness" />
              <refer refTo="tapeGap" />
            </add>
          </minus>
        </const>

        <const name="ACDTopZHalfWidth" >
          <notes>for convenience</notes>
          <quo>
            <refer refTo="ACDTopZwidth" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="tapeHalfThickness" >
          <notes>for convenience</notes>
          <quo>
            <refer refTo="tapeThickness" />
            <const value="2" uType="count" />
          </quo>
        </const>
<!-- thickness of side tiles + tape -->
        <const name="ACDSideThick">
          <notes>Tile thickness + tape thickness + gap (ACD sides)</notes>
          <add>
            <refer refTo="tileThickness" />
            <refer refTo="tapeThickness" />
            <refer refTo="tapeGap" />
          </add>
        </const>

        <const name="sideTileWidthShortXRow">
        <notes>to get width of an individual tile, take account of
              number of tiles in a row (and number of gaps)."Short"
              refers to the fact that the row has only 5 tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongXRow">
          <notes>Same as above for a long (10-tile) row</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>

<!-- Now do same for Y-direction -->
        <const name="ACDTopTotalY">
          <notes>Total Y width to be covered by top tiles</notes>
          <add>
            <refer refTo="towersTotalY" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDTKRStayClear" />
            </mul>
          </add>
        </const>

        <const name="ACDTotalYSide" >
          <notes>Same as above but for Y sides (tiles)</notes>
          <add>
            <refer refTo="ACDTopTotalY" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDSideSupToTile" />
            </mul>
            <refer refTo="tileThickness" />
            <uminus>
              <refer refTo="topTileGap"/>
            </uminus>
          </add>
        </const>

        <const name="ACDTotalY">
          <notes>max extent in y of all of ACD (not just top)</notes>
          <add>
            <refer refTo="ACDTotalYSide" />
            <refer refTo="tileThickness" />
            <refer refTo="topTileGap" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="tapeThickness" />
                <refer refTo="tapeGap" />
              </add>
            </mul>
          </add>
        </const>


        <const name="ACDSideHeight" >
          <notes>Total height of an ACD side: tiles plus gaps</notes>
          <add>
            <refer refTo="sideTileHeight0" />
            <refer refTo="sideTileHeight1" />
            <refer refTo="sideTileHeight2" />
            <refer refTo="sideTileHeight3" />
            <mul>
              <minus>
                <refer refTo="numSideRows" />
                <const value="1" uType="count" />
              </minus>
              <refer refTo="sideVerticalGap" />
            </mul>
          </add>
        </const>

        <const name="sideTileWidthShortYRow">
          <notes>Same idea as for ACD X-side tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongYRow">
          <notes>Same idea as for ACD X-side tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>
<!-- end Y side tile calculations -->

<!-- heights of tiles on both X and Y sides are the same: -->
        <const name="sideTileRow0_d">
          <notes>Z-Displacement for top row (row 0) of side tiles (X and Y),
                relative to the center of a box containing the side</notes>
          <quo>
            <minus>
              <refer refTo="ACDSideHeight" />
              <refer refTo="sideTileHeight0" />
            </minus>
            <const value="2" />
          </quo>
        </const>

        <const name="sideTileRow1_d">
          <notes>Displacement for row 1 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow0_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight1" />
                  <refer refTo="sideTileHeight0" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow2_d">
          <notes>Displacement for row 2 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow1_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight2" />
                  <refer refTo="sideTileHeight1" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow3_d">
          <notes>Displacement for row 3 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow2_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight3" />
                  <refer refTo="sideTileHeight2" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

<!-- Now some stuff involving the ACD tape -->
        <const name="tapeSideLength">
          <notes>length of scintillating tape on a side (assume a single 
          piece going from top to bottom for now</notes>
          <minus>
            <refer refTo="ACDSideHeight" />
            <refer refTo="sideOverlapToTopTape" />
          </minus>
        </const>

        <const name="topTapeLenLong" >
          <notes>lengths of tape convering gaps in the top.  There are
            3 different lengths to deal with the fact that tiles in
            different top rows are obscured differeng amounts by 
            overlap.  The longest tape goes over the outermost tiles,
            the shortest across the central row.  See Heather's 
            first diagram</notes>
          <add>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="tapeTopExt" />
          </add>
        </const>
        <const name="topTapeLenMedium" >
          <notes>Length of top tapes for rows 1 and 3</notes>
          <minus>
            <refer refTo="topTapeLenLong" />
            <refer refTo="topOverlap" />
          </minus>
        </const>
        <const name="topTapeLenShort">
          <notes>Length of top tape for central row: row 2</notes>
          <minus>
            <refer refTo="ACDTopXWidth" />
            <mul>
              <const value="2" uType="count" />
               <add>
                 <refer refTo="topOverlap" />
                 <refer refTo="tapeTopExt" /> 
               </add>
            </mul>
          </minus>
        </const>

        <const name="topTapesPerRow" uType="count">
          <notes> Tapes on top come in columns, similar to tiles, except there
     is one less piece of tape than there are tiles in a row</notes>
          <minus>
            <refer refTo="numYTopTiles" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="topTapeGap" >
          <notes>gap between adjacent pieces of (top)tape in the 
          same row</notes>
          <add>
            <refer refTo="ACDTopYWidth" />
            <refer refTo="topTileGap" />
            <uminus>
              <refer refTo="tapeWidth" />
            </uminus>
          </add>
        </const>

<!-- Need to compute a bunch of displacements of top tapes relative to
     the "top ACD" envelope.  First do X, then Z.  Y displacements are
     all zero.  -->
        <const name="topTapeX4_d">
          <notes>x-displacement for a top tape in row 4
          relative to the "top ACD" envelope</notes>
          <mul>
            <const value="0.5" uType="count" />
            <minus>
              <refer refTo="ACDTopTotalX" />
              <refer refTo="topTapeLenLong" />
            </minus>
          </mul>
        </const>
        <const name="topTapeX3_d" >
          <notes>x-displacement for a top tape in  row 3</notes>
          <mul>
            <const value="0.5" uType="count" />
            <add>
              <refer refTo="topTapeLenShort" />
              <refer refTo="topTapeLenMedium" />
            </add>
          </mul>
        </const>
        <const name="topTapeX2_d" value="0.0">
          <notes>x-displacement for a top tape in  row 2</notes>
        </const>
        <const name="topTapeX1_d">
          <notes>x-displacement for a top tape in  row 1</notes>
          <uminus>
            <refer refTo="topTapeX3_d" />
          </uminus>
        </const>
        <const name="topTapeX0_d">
          <notes>x-displacement for a top tape in  row 0</notes>
          <uminus>
            <refer refTo="topTapeX4_d" />
          </uminus>
        </const>

        <const name="topTapeZLong_d" >
          <notes>Z displacement for a long (row 0 or 4) top tape</notes>
          <minus>
            <refer refTo="ACDTopZHalfWidth" />
            <refer refTo="tapeHalfThickness" />
          </minus>
        </const>

        <const name="topTapeZMedium_d" >
          <notes>Z displacement for a medium (row 1 or 3) top tape</notes>
          <minus>
            <refer refTo="topTapeZLong_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTapeZShort_d" >
          <notes>Z displacement for a top tape in row 2</notes>
          <minus>
            <refer refTo="topTapeZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileZEdge_d" >
          <notes>Z displacement for a top tile in rows 0 or 4</notes>
          <minus>
            <mul>
              <const value="2.5" uType="count"  />
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="ACDTopZHalfWidth" />
          </minus>
        </const>

        <const name="topTileZMedium_d" >
          <notes>Z displacement for a top tile in rows 1 or 3</notes>
          <minus>
            <refer refTo="topTileZEdge_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileZCenter_d" >
          <notes>Z displacement for a top tile in row 2</notes>
          <minus>
            <refer refTo="topTileZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileX2_d"  value="0">
          <notes> middle row is centered in X</notes>
        </const>

        <const name="topTileX3_d" >
          <notes>X-displacement for a top tile in row 3</notes>
          <minus>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="topOverlap" />
          </minus>
        </const>

        <const name="topTileX4_d" >
          <notes>X-displacement for a top tile in row 4</notes>
          <mul>
            <const value="2" uType="count"  />
            <refer refTo="topTileX3_d" />
          </mul>
        </const>

        <const name="topTileX0_d" >
          <notes>X-displacement for a top tile in row 0</notes>
          <uminus>
            <refer refTo="topTileX4_d" />
          </uminus>
        </const>

        <const name="topTileX1_d" >
          <notes>X-displacement for a top tile in row 1</notes>
          <uminus>
            <refer refTo="topTileX3_d" />
          </uminus>
        </const>

        <const name="betweenSideTapesX" >
          <notes>gap between two tapes on an ACD X-side</notes>
          <minus>
            <refer refTo="sideTileWidthShortXRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

        <const name="betweenSideTapesY" >
          <notes>gap between two tapes on an ACD Y-side</notes>
          <minus>
            <refer refTo="sideTileWidthShortYRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

        <const name="ACDSideDovetail_d" >
          <notes>Side tiles and tapes on sides parallel to X-axis
                 have a displacement in X of this amount. Those
                 on sides || to Y are displaced in Y the same amount</notes>
          <uminus>
            <quo>
              <add>
                <refer refTo="tileThickness" />
                <refer refTo="topTileGap" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>

        <const name="ACDSideDovetail_dn" >
          <notes>Dovetail displacement for "negative" ACD sides</notes>
          <uminus>
            <refer refTo="ACDSideDovetail_d" />
          </uminus>
        </const>
      </derCategory>


      <derCategory name="derGlobal" save="true" >
        <overview>A few more constants needed for the outermost 
                 LAT compositions</overview>
        <const name="LATX" >
          <notes>X-dimension of an envelope for the LAT,
                not including thermal blanket</notes>
          <refer refTo="ACDTotalX" />
        </const>
        <const name="LATY" >
          <notes>Y-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="LATZ" >
          <notes>Z-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <max>
            <refer refTo="ACDSideHeight" />
            <add>
              <refer refTo="towersTotalZ" />
              <refer refTo="sideOverlapToTopTape" />
              <refer refTo="ACDTopZwidth" />
            </add>
          </max>
        </const>

        <const name="bigXZDim" >
          <notes>Something big enough (for X and Z) to position 
                 everything inside,
                 with origin where it should be, at the very front
                 of the grid.</notes>
          <mul>
            <const value="2" uType="count" />
            <max>
              <add>
                <refer refTo = "towersTotalZ" />
                <refer refTo = "NADSpacecraftZ" />
              </add>
              <refer refTo = "ACDTotalXSide" />
            </max>
          </mul>
        </const>

        <const name="NADTotalPanelLen" >
          <notes>Length of panel proper plus connecting rod</notes>
          <add>
            <refer refTo="NADSolarRodLength" />
            <refer refTo="NADSolarPLength" />
          </add>
        </const>


        <const name="bigYDim" >
          <notes>Something big enough to use as Y dimension of
                 envelope (takes into account solar panels)
                 </notes>
          <mul>
            <const value = "2" uType="count" />
            <add>
              <refer refTo="NADTotalPanelLen" />
              <const value = "100" />          
              <refer refTo="NADSpacecraftR" />
            </add>
          </mul>
        </const>
             

        <const name="solarPanel_dy" >
          <notes>y-displacement of panel-only part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <quo>
            <refer refTo="NADSolarRodLength" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="solarRod_dy" >
          <notes>y-displacement of rod part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <uminus>
            <quo>
              <refer refTo="NADSolarPLength" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>

        <const name="solarPanelEnv_dy" >
          <notes>y-displacement of entire (+Y) solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <add>
            <refer refTo="NADSpacecraftR" />
            <quo>
              <refer refTo="NADTotalPanelLen" />
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>
        
        <const name="solarPanelEnv_dyn" >
          <notes>y-displacement of entire (-Y) solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <uminus>
            <refer refTo="solarPanelEnv_dy" />
          </uminus>
        </const>

        <!-- Put solar panels just halfway down the spacecraft -->
        <const name="solarPanelEnv_dz" >
          <notes>z-displacement of entire solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <refer refTo="spacecraft_dz" />
        </const>

        <const name="solarPanelSi_dz" >
          <notes>z-displacement of Si part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <quo>
            <refer refTo="NADSolarCoreThick" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="solarPanelCore_dz" >
          <notes>z-displacement of core part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <uminus>
            <quo>
              <refer refTo="NADSolarSiThick" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>
          

        <const name="NADSolarRodDiam" >
          <notes>Diameter of rods connecting solar panels to spacecraft</notes>
          <add>
            <refer refTo="NADSolarRodR" />
            <refer refTo="NADSolarRodR" />
          </add>
        </const>

        <const name="LATZHalf" >
          <notes>convenience</notes>
          <quo>
            <refer refTo="LATZ" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="towers_dz" >
          <notes>Displacement necessary to get towers origin in the
                 right place</notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <refer refTo="CALVertStayClear" />
          </minus>
        </const>

        <const name="ACDTop_d" >
          <notes>Z displacement of top ACD relative to Ritz origin</notes>
          <add>
            <refer refTo="TKRVertStayClear" />
            <refer refTo="calTrackerGap" />
            <refer refTo="topStandoff" />
            <refer refTo="ACDTopZHalfWidth" />
          </add>
        </const>

        <const name="spacecraft_dz">
          <notes>Z displacement of spacecraft relative to Ritz origin.
                It goes immediately under the LAT</notes>
          <uminus>
            <add>
              <refer refTo="NADGridFlangeZ" />
              <refer refTo="CALVertStayClear" />
              <refer refTo="NADSpacecraftGap" />
              <quo> 
                 <refer refTo="NADSpacecraftZ" />
                 <const value="2" uType="count" />
              </quo>
            </add>
          </uminus>
        </const>

<!-- have to do analogous 5 constants for side tile locations -->

        <const name="tileSide_dz">
          <notes>displacement in z of side tiles rel. to Ritz origin</notes>
          <quo>
            <refer refTo="ACDSideHeight" />
            <const value="2" uType="count" />
          </quo>
        </const>


        <const name="tileXSide_dy" >
          <notes>Displacement in y of tiles along a side || to X axis,
                relative to center of LATenv</notes>
          <add>
            <refer refTo="ACDSideSupToTile" />
            <quo>
              <add>
                <refer refTo="ACDTopTotalY" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tileXSide_dyN" >
          <notes>Displacement in y of tiles along a side || to X axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileXSide_dy" />
          </uminus>
        </const>

        <const name="tileYSide_dx" >
          <notes>Displacement in x of tiles along a side || to Y axis,
                relative to center of LATenv</notes>
          <add>
            <refer refTo="ACDSideSupToTile" />
            <quo>
              <add>
                <refer refTo="ACDTopTotalX" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tileYSide_dxN" >
          <notes>Displacement in x of tiles along a side || to Y axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileYSide_dx" />
          </uminus>
        </const>

        <const name="tapeSide_dz">
          <notes>displacement in z of side tapes rel. to Ritz origin</notes>
          <quo>
             <refer refTo="tapeSideLength" />
            <const value="2" uType="count" />
          </quo>
        </const>


        <const name="tapeXSide_dy" >
          <notes>Displacement in y of tapes along a side || to X axis,
                relative to center of LATenv.  Compute from displacement
                of tile sides (as of 5 dec.)</notes>
          <add>
            <refer refTo="tileXSide_dy" />
            <refer refTo="tapeGap" />
            <quo>
              <add>
                <refer refTo="tapeThickness" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tapeXSide_dyN" >
          <notes>Displacement in y of tapes along a side || to X axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tapeXSide_dy" />
          </uminus>
        </const>

        <const name="tapeYSide_dx" >
          <notes>Displacement in x of tapes along a side || to Y axis,
                relative to center of LATenv   Compute from displacement
                of tile sides (as of 5 dec.)</notes>
          <add>
            <refer refTo="tileYSide_dx" />
            <refer refTo="tapeGap" />
            <quo>
              <add>
                <refer refTo="tapeThickness" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tapeYSide_dxN" >
          <notes>Displacement in x of tapes along a side || to Y axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tapeYSide_dx" />
          </uminus>
        </const>
      </derCategory>

      <derCategory name="NADderived" save="true">
        <overview>Derived not-a-detector constants</overview>
        <const name="NADGridWebWidth" >
          <notes>Full width of grid web in X or Y</notes>
          <add>
            <mul>
              <const value="4" uType="count" />
              <refer refTo="NADGridWebCutout" />
            </mul>
            <mul>
              <const value="3" uType="count" />
              <refer refTo="NADGridWebInner" />
            </mul>
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridWebOuter" />
            </mul>
          </add>
        </const>

        <const name="NADGridFlangeWidth" >
          <notes>Full width of grid flange in X or Y</notes>
          <add>
            <refer refTo="NADGridWebWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridFlangeOverhang" />
            </mul>
          </add>
        </const>

        <const name="NADGridFlangeOuter" >
          <notes>Width of outer piece of flange (wider than web)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <add>
                <mul>
                  <const value="4" uType="count" />
                  <refer refTo="NADGridFlangeCutout" />
                </mul>
                <mul>
                  <const value="3" uType="count" />
                  <refer refTo="NADGridFlangeInner" />
                </mul>
              </add>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridFlangeInnerHalf">
          <notes> convenience</notes>
          <quo>
            <refer refTo="NADGridFlangeInner" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridWebInnerHalf">
          <notes> convenience</notes>
          <quo>
            <refer refTo="NADGridWebInner" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <!-- The per-tower web (flange) is picture-frame shaped.
             Break it into 4 boxes. Height of each is web (flange)
             height.  Width of each is NADGridWebInnerHalf
             (NADGridFlangeInnerHalf).  Two have length = towerPitch;
             the others are shorter by NADGridWebInner (NADGridFlangeInner)
        -->
        <const name="NADGridLenLong" >
            <notes>Length of longer outer (not per-tower) grid pieces</notes>
          <refer refTo="towerPitch" />
        </const>

        <const name="NADGridWebLenShort" >
          <notes>Length of shorter outer (not per-tower) 
     grid web pieces</notes>
          <minus> 
            <refer refTo="towerPitch" />
            <refer refTo="NADGridWebInner" />
          </minus>
        </const>

        <const name="NADGridFlangeLenShort" >
          <notes>Length of shorter outer (not per-tower) 
     grid flange pieces</notes>
          <minus> 
            <refer refTo="towerPitch" />
            <refer refTo="NADGridFlangeInner" />
          </minus>
        </const>

<!-- Define some constants for the outside "picture frames" for
     grid web and grid flange -->
        <const name="NADGridWebOutsideWidth" >
          <notes>Width of web outside towers (i.e., 4 * towerPitch)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridWebWidth" />
              <mul>
                <const value="4" uType="count" />
                <refer refTo="towerPitch" />
              </mul>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridFlangeOutsideWidth" >
          <notes>Width of flange outside towers (i.e., 4 * towerPitch)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <mul>
                <const value="4" uType="count" />
                <refer refTo="towerPitch" />
              </mul>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridWebOutsideLenShort" >
          <notes>Length of short outside piece of grid web</notes>
          <minus>
            <refer refTo="NADGridWebWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridWebOutsideWidth" />
            </mul>
          </minus>
        </const>

        <const name = "NADGridFlange_dz" >
          <notes>Displacement of flange w.r.t. Ritz origin, which is
                 at its top face</notes>
          <uminus>
            <quo>
              <refer refTo="NADGridFlangeZ" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>

        <const name = "NADGridWeb_dz" >          
          <notes>Displacement of grid  w.r.t. Ritz origin. Web is
                 immediately below flange.</notes>
          <uminus>
            <add>
               <refer refTo="NADGridFlangeZ" />
               <quo>
                 <refer refTo="NADGridWebZ" />
                 <const value="2" uType="count" />
               </quo>
             </add>
          </uminus>
        </const>
           

        <const name="NADGridFlangeOutsideLenShort" >
          <notes>Length of short outside piece of grid web</notes>
          <minus>
            <refer refTo="NADGridFlangeWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridFlangeOutsideWidth" />
            </mul>
          </minus>
        </const>

        <const name="NADBlanketTopX" >
          <notes>X dimension of top of thermal blanket</notes>
          <add>
            <refer refTo="ACDTotalX" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADBlanketThick" />
            </mul>
          </add>
        </const>

        <const name="NADBlanketTopY" >
          <notes>Y dimension of top of thermal blanket</notes>
          <add>
            <refer refTo="ACDTotalY" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADBlanketThick" />
            </mul>
          </add>
        </const>

        <const name="NADBlanketSideX" >
          <notes>length in long dimension of X-sides of blanket</notes>
          <refer refTo="NADBlanketTopX" />
        </const>

        <const name="NADBlanketSideY" >
          <notes>length in long dimension of Y-sides of blanket, shorter
            than X-sides because X-sides cover corners</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="NADBlanketSideZ" >
          <notes>height of a side piece of the blanket:  approx.
             height of ACD side tiles + height of cal</notes>
          <add>
            <refer refTo="ACDSideHeight" />
            <refer refTo="CALVertStayClear"/>
          </add>
        </const>
               

        <const name="NADBlanket_dx">
          <notes>x displacement of pos. x side of blanket</notes>
          <quo>
            <add>
              <refer refTo = "ACDTotalX" />
              <refer refTo = "NADBlanketThick" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>             

        <const name="NADBlanket_dxn">
          <notes>x displacement of neg. x side of blanket</notes>
          <uminus>
            <refer refTo = "NADBlanket_dx" />
          </uminus>
        </const>
 

        <const name="NADBlanket_dy">
          <notes>y displacement of pos. y side of blanket</notes>
          <quo>
            <add>
              <refer refTo = "ACDTotalY" />
              <refer refTo = "NADBlanketThick" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>             

        <const name="NADBlanket_dyn">
          <notes>y displacement of neg. y side of blanket</notes>
          <uminus>
            <refer refTo = "NADBlanket_dy" />
          </uminus>
        </const>
 
        <const name="NADBlanketTop_dz">
          <notes>z displacement of top of blanket</notes>
          <add>
            <refer refTo="ACDSideHeight" />
            <quo> 
              <refer refTo="NADBlanketThick" />
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="NADBlanketSides_dz">
          <notes>z displacement of sides of blanket</notes>
            <minus>
              <quo>
                <refer refTo="NADBlanketSideZ" />
                <const value="2" uType="count" />
              </quo>
              <refer refTo="CALVertStayClear" />
            </minus>
          </const>
              
      </derCategory>
    </derived>
