<?xml version="1.0"  ?>

<!--  $Header: /nfs/slac/g/glast/ground/cvs/xmlUtil/xml/flight.xml,v 1.5 2001/04/12 18:34:17 jrb Exp $        -->
<!-- 1 Feb 2001   Default length unit is now mm.  Change constants
                   accordingly.                             (jrb) 
    22 Feb 2001   Add CVS macros, CVSid attribute for gdd     
     1 Mar 2001   Changes for <identifier> to <idField> change in dtd.
                  Includes combining old pair of diode identifier fields
                  into just one and ( *sigh* ) eliminating "orient" field.
-->

<!DOCTYPE gdd SYSTEM "gdd.dtd"
  [
    <!-- Keep some of the primary definitions in separate files -->
    <!ENTITY globalMatPrim   SYSTEM "flightGlobalMatPrim.xml">
    <!ENTITY globalCountPrim SYSTEM "flightGlobalCountPrim.xml">
    <!ENTITY globalDimPrim   SYSTEM "flightGlobalDimPrim.xml">

    <!ENTITY CALMatPrim     SYSTEM "flightCALMatPrim.xml">
    <!ENTITY CALCountPrim   SYSTEM "flightCALCountPrim.xml">
    <!ENTITY CALDimPrim     SYSTEM "flightCALDimPrim.xml">

    <!ENTITY TKRMatPrim     SYSTEM "flightTKRMatPrim.xml">
    <!ENTITY TKRCountPrim   SYSTEM "flightTKRCountPrim.xml">
    <!ENTITY TKRDimPrim     SYSTEM "flightTKRDimPrim.xml">

    <!ENTITY ACDMatPrim     SYSTEM "flightACDMatPrim.xml">
    <!ENTITY ACDCountPrim   SYSTEM "flightACDCountPrim.xml">
    <!ENTITY ACDDimPrim     SYSTEM "flightACDDimPrim.xml">

    <!ENTITY idDict         SYSTEM "flightIdDict.xml">
  ]
>
<gdd CVSid="$Id: flight.xml,v 1.5 2001/04/12 18:34:17 jrb Exp $" 
     DTDversion="2.0" >
  <constants>
    <version major="0" minor="0" />
    <primary>
      &globalMatPrim;
      &globalCountPrim;
      &globalDimPrim;
      &CALMatPrim;
      &CALCountPrim;
      &CALDimPrim;
      &TKRMatPrim;
      &TKRCountPrim;
      &TKRDimPrim;
      &ACDMatPrim;
      &ACDCountPrim;
      &ACDDimPrim;
    </primary>

    <derived>
      <derCategory name="derCAL" save="true">
<overview>Derived constants specific to CAL.
</overview>

        <const name="CALMaxLayer" uType="count" >
          <notes>upper limit on Cal layer idfield value</notes>
          <minus>
            <refer refTo="CALnLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>

    <!-- diodePosXOffset  = (CsILength + diodeX)/2 -->
        <const name="diodePosXOffset" >
          <notes>X-offset of a diode relative to the center of the CsI crystal</notes>
          <quo>
            <add>
              <refer refTo="CsILength" />
              <refer refTo="diodeX" />
            </add>
            <const value="2" uType="count"/>
          </quo>
        </const>
        <const name="diodeNegXOffset" >
          <notes>X-offset of diode on negative end of a crystal</notes>
          <uminus><refer refTo="diodePosXOffset" /> </uminus>
        </const>

        <const name= "CALHalfGap">
          <notes>convenience</notes>
          <mul> 
            <refer refTo="CALGap" /> 
            <const value="0.5" uType="count" /> 
          </mul>
        </const>


<!-- dimensions for log envelope volume -->
        <const name="CsIEnvX">  
          <notes>Long dimension of envelope containing a CsI crystal and its diodes</notes>
          <add>
            <refer refTo="CsILength" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="diodeX" />
            </mul>
          </add>
        </const>

        <const name="CsIEnvY">  
          <notes>Transverse dimension of envelope containing a CsI crystal and its diodes</notes>
          <add>
            <refer refTo="CsIWidth" />
            <refer refTo="CALGap" />
          </add>
        </const>

        <const name = "CsIEnvZ" >
          <notes>Height of the envelope containing a CsI crystal and its diodes</notes>
          <add>
            <refer refTo="CsIHeight" />
            <refer refTo="CALGap" />
          </add>
        </const>

<!-- the following should be the maximum of the length of a single
     CsIElement and the transverse distance across the whole 
     collection of CsIElements in a layer, so
      max(CsIEnvX, nCsIPerLayer*CsIEnvY), which ends up being
      CsIEnvX in this case    --> 
        <const name = "CALLayerTrans" ><notes>Transverse dimension of a CAL layer: max(CsiEnvX, nEltPerlayer*CsIEnvY)</notes>
          <max>
            <refer refTo="CsIEnvX" />
            <mul>
              <refer refTo="nCsIPerLayer" />
              <refer refTo="CsIEnvY" />
            </mul>
          </max>
	</const>

<!-- the following includes cal layers and inter-layer spacers, but
     not frame, grid between cal and tkr, etc. 
     Hence it's nlayer*CsIEnvZ + (nlayer - 1)*CALInterLayer or
     nLayer*(CsIEnvZ + CALInterLayer) - CALInterLayer = 19.306 -->
        <const name="CALTotalZ">
<notes>Includes cal layers and inter-layer spacers, but not frame, grid, etc.</notes>
          <minus>
            <mul>
              <refer refTo="CALnLayer" />
              <add>
                <refer refTo="CsIEnvZ" />
                <refer refTo="CALInterLayer" />
              </add>
            </mul>
            <refer refTo="CALInterLayer" />
          </minus>
        </const>

    <!-- additional (derived) dimensions for frame -->
        <const name = "CALFrameWidth">
          <notes>transverse dimension for cal frame (one tower)</notes>
          <add>
            <refer refTo="CALLayerTrans" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="CALFrameSideThick" />
            </mul>
          </add>
        </const>
  
    <!--  Height of side pieces is just CALTotalZ -->

    <!-- Height of entire frame must also include thickness of top&bottom -->
	<const name="CALFrameHeight"  >
          <notes>Height of entire frame</notes>
	  <add>
	    <refer refTo="CALTotalZ" />
	    <mul>
	      <const value="2" uType="count"/>
	      <refer refTo="CALFrameTBThick" />
	    </mul>
	  </add>
	</const>

	<const name = "CALFrameSide_d"> 
          <notes>Displacement of a side frame relative to tower</notes>
	  <mul>
	    <add>
	      <refer refTo="CALFrameSideThick" />
	      <refer refTo= "CALFrameWidth" />
	    </add>
	    <const value="0.5" uType="count" />
	  </mul>
	</const>

	<const name ="CALFrameSide_dN" >
          <notes>Displacement of a side frame relative to tower</notes>
	  <uminus>
	    <refer refTo="CALFrameSide_d" />
	  </uminus>
	</const>

	<const name="CALFrameTB_d" > 
          <notes>Displacement of top and bottom of frame, relative to 
                the whole.</notes>
	  <mul>
	    <add>
	      <refer refTo= "CALFrameTBThick" />
	      <refer refTo="CALTotalZ" />
	    </add>
	    <const value="0.5" uType="count"/>
	  </mul>
	</const>
	    
	<const name="CALFrameTB_dN" >
          <notes>Displacement of top and bottom of frame, relative to 
                the whole.</notes>
	  <uminus>
	    <refer refTo="CALFrameTB_d" />
	  </uminus>
	</const>
      </derCategory>

      <derCategory name="derTKR"  save="true" >
        <overview>Derived constants specific to tracker</overview>
	<const name="TKRTrayWidth" >
	  <minus>
	    <refer refTo="TKRWidth" />
	    <mul>
	      <const value="2" uType="count"/>
	      <refer refTo="TKRElectGap" />
	    </mul>
	  </minus>
	</const>

        <const name="inactiveThickUpperReg" >
          <notes>Inactive materials above core between Si and core
                 for regular layers</notes>
          <add>
            <refer refTo="glueSiThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueThick" />
            <refer refTo="faceThick" />
            <refer refTo="glueThick" />
          </add>
        </const>

        <const name="inactiveThickUpperSuper">
          <notes>Inactive materials above core between Si and core
                 for superGlast layers</notes>
          <add>
            <refer refTo="glueSiThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueThick" />
            <refer refTo="faceThickSuper" />
            <refer refTo="glueThick" />
          </add>
        </const>

        <const name="inactiveThickLowerNoCnv">
          <notes>Inactive materials from core on down to Si for no cnv
                 layers</notes>
          <add>
            <refer refTo="glueThick" />
            <refer refTo="faceThick" />
            <refer refTo="glueThick" />
            <refer refTo="glueThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueSiThick" />
          </add>
        </const>

        <const name="inactiveThickBelowCnv">
          <notes>Inactive materials below converter, above bottom Si</notes>
          <add>
            <refer refTo="glueThick" />
            <refer refTo="biasPlaneThick" />
            <refer refTo="glueSiThick" />
          </add>
        </const>

        <const name="inactiveThickToCnvReg">
          <notes>Inactive materials from core to converter, exclusive,
                 for regular layers</notes>
          <add>
            <refer refTo="glueThick" />
            <refer refTo="faceThick" />
            <refer refTo="glueThick" />
          </add>
        </const>

        <const name="inactiveThickToCnvSuper">
          <notes>Inactive materials from core to converter, exclusive,
                 for super-glast layers</notes>
          <add>
            <refer refTo="glueThick" />
            <refer refTo="faceThickSuper" />
            <refer refTo="glueThick" />
          </add>
        </const>


        <const name="inactiveThickOutside">
          <notes>Inactive materials from outside (top of top or bottom
             of bottom layer) to core</notes>
          <add>
            <refer refTo="faceThick" />
            <refer refTo="glueThick" />
          </add>
        </const>

        <const name="TKRMaxNoCnv" uType="count">
          <notes>Tray number of most forward no-converter tray</notes>
          <minus>
            <refer refTo="numNoCnvTrays" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="TKRMaxReg" uType="count" >
          <notes>Tray number of most forward "regular" tray. Top
                 tray doesn't qualify since it has no top Si.</notes>
          <minus>
            <refer refTo="maxTray" />
            <const value="1" uType="count" />
          </minus>
        </const>

<!-- probably obsolete (3/20/01) -->
	<const name = "outsideTrayZ">
          <notes>Total Z dimension of top and bottom trays</notes>
	  <add>
	    <refer refTo = "panelThick" />
            <refer refTo = "faceThick" />
            <refer refTo = "faceThick" />
	    <refer refTo = "SiThick" />
	  </add>
	</const>

	<const name = "middleTrayZ">
          <notes>Total Z dimension of interior trays</notes>
	  <add>
	    <refer refTo = "outsideTrayZ" />
	    <refer refTo = "SiThick" />
	  </add>
	</const>
      </derCategory>

      <derCategory name="misc">
        <overview>Stuff that doesn't fit elsewhere</overview>
<!-- a couple convenience numbers -->
        <const name="xNumM1" uType="count">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="xNum" />
            <const value="1" uType="count" />
          </minus>
        </const>
        <const name="yNumM1" uType="count">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="yNum" />
            <const value="1" uType="count" />
          </minus>
        </const>


        <const name="nLadderM1" uType="count" >
          <notes>Upper limit on ladder idField values</notes>
          <minus>
            <refer refTo="nWaferAcross" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxLog" uType="count" >
          <notes>Upper limit on CsI log idField values</notes>
          <minus>
            <refer refTo="nCsIPerLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxTray" uType="count" >
          <notes>Upper limit on tray idField values</notes>
          <minus>
            <refer refTo="numTrays" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxTrayM1" uType="count" >
          <notes>max tray number of tray with bottom Si wafers</notes>
          <minus>
            <refer refTo="numTrays" />
            <const value="2" uType="count" />
          </minus>
        </const>

        <const name="maxWaferStripNum" uType="count" >
          <notes>Upper limit on strip number within a wafer</notes>
          <minus>
            <refer refTo="stripPerWafer" />
            <const value="1" uType="count" />
          </minus>
        </const>

<!-- These might not be quite right.  Check that frame is
     accounted for. -->
	<const name="towersTotalX">
          <notes>Meant to be X width of the array of towers, but doesn't 
(yet) include grid</notes>
          <add>
            <mul>
              <refer refTo="xNum" />
              <refer refTo="modWidth" />
            </mul>
            <mul>
              <refer refTo="xNumM1" />
              <add>
                <refer refTo="wallThickness" />
                <refer refTo="wallGap" />
              </add>
            </mul>
          </add>
        </const>

	<const name="towersTotalY">
          <notes>Meant to be X width of the array of towers, but doesn't 
(yet) include grid</notes>
          <add>
            <mul>
              <refer refTo="yNum" />
              <refer refTo="modWidth" />
            </mul>
            <mul>
              <refer refTo="xNumM1" />
              <add>
                <refer refTo="wallThickness" />
                <refer refTo="wallGap" />
              </add>
            </mul>
          </add>
        </const>

<!-- Compute total Z by adding up
            CAL height
            cal-tracker gap
            (ntray-1)* inter-tray spacing
            Z of top half of top tray, bottom half of bottom tray
              (which is the same as Z of a single outer tray)
-->
	<const name="towersTotalZ">  
<notes>Height of cal + height of tracker + gap between</notes>
          <add>
            <refer refTo="CALFrameHeight" />
            <refer refTo="calTrackerGap" />
            <refer refTo="TKRTotalZ" />
<!--
            <mul>                           
              <minus>
                <refer refTo="numTrays" />
                <const value="1" uType="count" />
              </minus>
              <refer refTo="traySpacing" />
            </mul>
            <refer refTo="outsideTrayZ" />  
 -->
          </add>                               
        </const>
      </derCategory>

      <derCategory name="derACD" save="true" >
        <overview>Derived constants specific to the ACD</overview>
        <const name="ACDTopTotalX">
          <notes>Total X width to be covered by top tiles</notes>
          <add>
            <refer refTo="towersTotalX" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDSideStandoff" />
            </mul>
          </add>
        </const>

        <const name="ACDTotalX">
          <notes>max extent in x of all of ACD</notes>
          <add>
            <refer refTo="ACDTopTotalX" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="tileThickness" />
                <refer refTo="topTileGap" />
              </add>
            </mul>
          </add>
        </const>

        <const name="ACDTopTotalY">
          <notes>Total Y width to be covered by top tiles</notes>
          <add>
            <refer refTo="towersTotalY" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="ACDSideStandoff" />
            </mul>
          </add>
        </const>

        <const name="ACDTotalY">
          <notes>max extent in y of all of ACD</notes>
          <add>
            <refer refTo="ACDTopTotalY" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="tileThickness" />
                <refer refTo="topTileGap" />
              </add>
            </mul>
          </add>
        </const>

        <const name="XTopTileMax" uType="count">
          <notes>Convenience for idField definitons</notes>
          <minus>
            <refer refTo="numXTopTiles" />
            <const value="1.0" />
          </minus>
        </const>

        <const name="YTopTileMax" uType="count">
          <notes>Convenience for idField definitons</notes>
          <minus>
            <refer refTo="numYTopTiles" />
            <const value="1" uType="count" />
          </minus>
        </const>


        <const name="ACDLongRowMin" uType="count" >
          <notes>row number of first long ACD side row</notes>
          <add>
            <refer refTo="ACDShortRowMax" />
            <const value="1" uType="count" />
          </add>
        </const>

        <const name="ACDLongRowMax" uType="count" >
          <notes>row number of last long ACD side row</notes>
          <minus>
            <refer refTo="numSideRows" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDShortMaxCol" uType="count">
          <notes>Column number of last tile in a short row</notes>
          <minus>
            <refer refTo="numPerSideRowShort" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDLongMaxCol" uType="count">
          <notes>Column number of last tile in a long row</notes>
          <minus>
            <refer refTo="numPerSideRowLong" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="ACDTopXWidth">
          <notes>X dimension for a top tile. Must be derived from total width top and other things.  Tiles overlap in X.</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalX"/>
              <mul>
                <refer refTo="XTopTileMax" />
                <refer refTo="topOverlap" />
              </mul>
              <mul>
                <const value="2" uType="count" />
                <minus>
                  <refer refTo="ACDSupportThickness" />
                  <refer refTo="topTileGap" />
                </minus>
              </mul>
            </add>
            <refer refTo="numXTopTiles" />
          </quo>
        </const>

        <const name="ACDTopYWidth">
          <notes>Y dimension for a top tile.  Derived from total width, size of gaps.</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalY"/>
              <uminus>
                <mul>
                  <add>
                    <const value="1" uType="count" />
                    <refer refTo="numYTopTiles" />
                  </add>
                  <refer refTo="topTileGap" />
                </mul>
              </uminus>

            </add>
            <refer refTo="numYTopTiles" />
          </quo>
        </const>

<!-- Compute Z for the smallest box containing the top tiles + tape.
     From Heather's first diagram, this is

      3*tileThickness + tapeGap + tapeThickness

     May have to do this over for a box containing support as well,
     but so far have no information for support                   -->
        <const name="ACDTopZwidth" >
          <add>
            <mul>
              <const value="3" uType="count" /> <!-- (nRow+1)/2 -->
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="tapeGap" />
            <refer refTo="tapeThickness" />
          </add>
        </const>

<!-- following are convenient to have.. -->
        <const name = "sideOverlapToTopTape" >
          <notes>Distance from top of side tile to top of top tape</notes>
          <minus>
            <refer refTo="sideOverlap" />
            <add>
              <refer refTo="tapeThickness" />
              <refer refTo="tapeGap" />
            </add>
          </minus>
        </const>

        <const name="ACDTopZHalfWidth" >
          <notes>for convenience</notes>
          <quo>
            <refer refTo="ACDTopZwidth" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="tapeHalfThickness" >
          <notes>for convenience</notes>
          <quo>
            <refer refTo="tapeThickness" />
            <const value="2" uType="count" />
          </quo>
        </const>
<!-- thickness of side tiles + tape -->
        <const name="ACDSideThick">
          <notes>Tile thickness + tape thickness + gap (ACD sides)</notes>
          <add>
            <refer refTo="tileThickness" />
            <refer refTo="tapeThickness" />
            <refer refTo="tapeGap" />
          </add>
        </const>

        <const name="ACDTotalXSide" >
          <notes>total length (in x direction) to be covered by a 
row of side tiles</notes>
          <add>
            <refer refTo="towersTotalX" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="ACDSideStandoff" />
                <refer refTo="ACDSupportThickness" />
              </add>
            </mul>
            <refer refTo="tileThickness" />
          </add>
        </const>

        <const name="sideTileWidthShortXRow">
        <notes>to get width of an individual tile, take account of
              number of tiles in a row (and number of gaps)."Short"
              refers to the fact that the row has only 5 tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongXRow">
          <notes>Same as above for a long (10-tile) row</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>

<!-- Now do same for Y-direction -->
        <const name="ACDTotalYSide" >
          <notes>Same as above but for Y sides</notes>
          <add>
            <refer refTo="towersTotalY" />
            <mul>
              <const value="2" uType="count" />
              <add>
                <refer refTo="ACDSideStandoff" />
                <refer refTo="ACDSupportThickness" />
              </add>
            </mul>
            <refer refTo="tileThickness" />
          </add>
        </const>

        <const name="ACDSideHeight" >
          <notes>Total height of an ACD side: tiles plus gaps</notes>
          <add>
            <refer refTo="sideTileHeight0" />
            <refer refTo="sideTileHeight1" />
            <refer refTo="sideTileHeight2" />
            <refer refTo="sideTileHeight3" />
            <mul>
              <minus>
                <refer refTo="numSideRows" />
                <const value="1" uType="count" />
              </minus>
              <refer refTo="sideVerticalGap" />
            </mul>
          </add>
        </const>

        <const name="sideTileWidthShortYRow">
          <notes>Same idea as for ACD X-side tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongYRow">
          <notes>Same idea as for ACD X-side tiles</notes>
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>
<!-- end Y side tile calculations -->

<!-- heights of tiles on both X and Y sides are the same: -->
        <const name="sideTileRow0_d">
          <notes>Z-Displacement for top row (row 0) of side tiles (X and Y),
                relative to the center of a box containing the side</notes>
          <quo>
            <minus>
              <refer refTo="ACDSideHeight" />
              <refer refTo="sideTileHeight0" />
            </minus>
            <const value="2" />
          </quo>
        </const>

        <const name="sideTileRow1_d">
          <notes>Displacement for row 1 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow0_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight1" />
                  <refer refTo="sideTileHeight0" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow2_d">
          <notes>Displacement for row 2 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow1_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight2" />
                  <refer refTo="sideTileHeight1" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow3_d">
          <notes>Displacement for row 3 side tiles (X and Y)</notes>
          <minus>
            <refer refTo="sideTileRow2_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight3" />
                  <refer refTo="sideTileHeight2" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

<!-- Now some stuff involving the ACD tape -->
        <const name="tapeSideLength">
          <notes>length of scintillating tape on a side (assume a single 
          piece going from top to bottom for now</notes>
          <minus>
            <refer refTo="ACDSideHeight" />
            <refer refTo="sideOverlapToTopTape" />
          </minus>
        </const>

        <const name="topTapeLenLong" >
          <notes>lengths of tape convering gaps in the top.  There are
            3 different lengths to deal with the fact that tiles in
            different top rows are obscured differeng amounts by 
            overlap.  The longest tape goes over the outermost tiles,
            the shortest across the central row.  See Heather's 
            first diagram</notes>
          <add>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="tapeTopExt" />
          </add>
        </const>
        <const name="topTapeLenMedium" >
          <notes>Length of top tapes for rows 1 and 3</notes>
          <minus>
            <refer refTo="topTapeLenLong" />
            <refer refTo="topOverlap" />
          </minus>
        </const>
        <const name="topTapeLenShort">
          <notes>Length of top tape for central row: row 2</notes>
          <minus>
            <refer refTo="ACDTopXWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="topOverlap" />
            </mul>
          </minus>
        </const>

        <const name="topTapesPerRow">
          <notes> Tapes on top come in columns, similar to tiles, except there
     is one less piece of tape than there are tiles in a row</notes>
          <minus>
            <refer refTo="numYTopTiles" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="topTapeGap" >
          <notes>gap between adjacent pieces of (top)tape in the 
          same row</notes>
          <add>
            <refer refTo="ACDTopYWidth" />
            <refer refTo="topTileGap" />
            <uminus>
              <refer refTo="tapeWidth" />
            </uminus>
          </add>
        </const>

<!-- Need to compute a bunch of displacements of top tapes relative to
     the "top ACD" envelope.  First do X, then Z.  Y displacements are
     all zero.  -->
        <const name="topTapeX4_d">
          <notes>x-displacement for a top tape in row 4
          relative to the "top ACD" envelope</notes>
          <mul>
            <const value="0.5" uType="count" />
            <minus>
              <refer refTo="ACDTopTotalX" />
              <refer refTo="topTapeLenLong" />
            </minus>
          </mul>
        </const>
        <const name="topTapeX3_d" >
          <notes>x-displacement for a top tape in  row 3</notes>
          <mul>
            <const value="0.5" uType="count" />
            <add>
              <refer refTo="topTapeLenShort" />
              <refer refTo="topTapeLenMedium" />
            </add>
          </mul>
        </const>
        <const name="topTapeX2_d" value="0.0">
          <notes>x-displacement for a top tape in  row 2</notes>
        </const>
        <const name="topTapeX1_d">
          <notes>x-displacement for a top tape in  row 1</notes>
          <uminus>
            <refer refTo="topTapeX3_d" />
          </uminus>
        </const>
        <const name="topTapeX0_d">
          <notes>x-displacement for a top tape in  row 0</notes>
          <uminus>
            <refer refTo="topTapeX4_d" />
          </uminus>
        </const>

        <const name="topTapeZLong_d" >
          <notes>Z displacement for a long (row 0 or 4) top tape</notes>
          <minus>
            <refer refTo="ACDTopZHalfWidth" />
            <refer refTo="tapeHalfThickness" />
          </minus>
        </const>

        <const name="topTapeZMedium_d" >
          <notes>Z displacement for a medium (row 1 or 3) top tape</notes>
          <minus>
            <refer refTo="topTapeZLong_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTapeZShort_d" >
          <notes>Z displacement for a top tape in row 2</notes>
          <minus>
            <refer refTo="topTapeZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileZEdge_d" >
          <notes>Z displacement for a top tile in rows 0 or 4</notes>
          <minus>
            <mul>
              <const value="2.5" uType="count"  />
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="ACDTopZHalfWidth" />
          </minus>
        </const>

        <const name="topTileZMedium_d" >
          <notes>Z displacement for a top tile in rows 1 or 3</notes>
          <minus>
            <refer refTo="topTileZEdge_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileZCenter_d" >
          <notes>Z displacement for a top tile in row 2</notes>
          <minus>
            <refer refTo="topTileZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileX2_d"  value="0">
          <notes> middle row is centered in X</notes>
        </const>

        <const name="topTileX3_d" >
          <notes>X-displacement for a top tile in row 3</notes>
          <minus>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="topOverlap" />
          </minus>
        </const>

        <const name="topTileX4_d" >
          <notes>X-displacement for a top tile in row 4</notes>
          <mul>
            <const value="2" uType="count"  />
            <refer refTo="topTileX3_d" />
          </mul>
        </const>

        <const name="topTileX0_d" >
          <notes>X-displacement for a top tile in row 0</notes>
          <uminus>
            <refer refTo="topTileX4_d" />
          </uminus>
        </const>

        <const name="topTileX1_d" >
          <notes>X-displacement for a top tile in row 1</notes>
          <uminus>
            <refer refTo="topTileX3_d" />
          </uminus>
        </const>

        <const name="betweenSideTapesX" >
          <notes>gap between two tapes on an ACD X-side</notes>
          <minus>
            <refer refTo="sideTileWidthShortXRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

        <const name="betweenSideTapesY" >
          <notes>gap between two tapes on an ACD Y-side</notes>
          <minus>
            <refer refTo="sideTileWidthShortYRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

        <const name="ACDSideDovetail_d" >
          <notes>Side tiles and tapes on sides parallel to X-axis
                 have a displacement in X of this amount. Those
                 on sides || to Y are displaced in Y the same amount</notes>
          <uminus>
            <quo>
              <add>
                <refer refTo="tileThickness" />
                <refer refTo="topTileGap" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>
      </derCategory>

      <derCategory name="derGlobal" save="true" >
        <overview>A few more constants needed for the outermost 
                 LAT composition</overview>
        <const name="LATX" >
          <notes>X-dimension of an envelope for the LAT</notes>
          <refer refTo="ACDTotalX" />
        </const>
        <const name="LATY" >
          <notes>Y-dimension of an envelope for the LAT</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="LATZ" >
          <notes>Z-dimension of an envelope for the LAT</notes>
          <max>
            <refer refTo="ACDSideHeight" />
            <add>
              <refer refTo="towersTotalZ" />
              <refer refTo="sideOverlapToTopTape" />
              <refer refTo="ACDTopZwidth" />
            </add>
          </max>
        </const>

        <const name="LATZHalf" >
          <notes>convenience</notes>
          <quo>
            <refer refTo="LATZ" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="ACDTop_d" >
          <notes>Z displacement of top ACD relative to LATenv, the envelope
                 volume containing them + ACD</notes>
          <minus>
            <refer refTo="LATZHalf" />
            <add>
              <refer refTo="sideOverlapToTopTape" />
              <refer refTo="ACDTopZHalfWidth" />
            </add>
          </minus>
        </const>
              
        <const name="allTowers_d" >
          <notes>Z displacement of towers relative to LATenv</notes>
          <minus>
            <refer refTo="LATZHalf" />
            <add>
              <refer refTo="ACDTopZwidth" />
              <refer refTo="sideOverlapToTopTape" />
              <quo>
                <refer refTo="towersTotalZ" />
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

<!-- have to do analogous 5 constants for side tile locations -->

        <const name="tileSide_dz">
          <notes>displacement in z of side tiles rel. to LATenv</notes>
          <minus>
            <refer refTo="LATZHalf" />
            <quo>
              <refer refTo="ACDSideHeight" />
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="tileXSide_dy" >
          <notes>Displacement in y of tiles along a side || to X axis,
                relative to center of LATenv</notes>
          <add>
            <refer refTo="topTileGap" />
            <quo>
              <add>
                <refer refTo="ACDTopTotalY" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tileXSide_dyN" >
          <notes>Displacement in y of tiles along a side || to X axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileXSide_dy" />
          </uminus>
        </const>

        <const name="tileYSide_dx" >
          <notes>Displacement in x of tiles along a side || to Y axis,
                relative to center of LATenv</notes>
          <add>
            <refer refTo="topTileGap" />
            <quo>
              <add>
                <refer refTo="ACDTopTotalX" />
                <refer refTo="tileThickness" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tileYSide_dxN" >
          <notes>Displacement in x of tiles along a side || to Y axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileYSide_dx" />
          </uminus>
        </const>


<!--    edit above -->
        <const name="tapeSide_dz">
          <notes>displacement in z of side tapes rel. to LATenv</notes>
          <minus>
            <refer refTo="LATZHalf" />
            <add>
              <refer refTo="sideOverlapToTopTape" />
              <quo>
                <refer refTo="tapeSideLength" />
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="tapeXSide_dy" >
          <notes>Displacement in y of tapes along a side || to X axis,
                relative to center of LATenv</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalY" />
              <refer refTo="tapeThickness" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="tapeXSide_dyN" >
          <notes>Displacement in y of tapes along a side || to X axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tapeXSide_dy" />
          </uminus>
        </const>

        <const name="tapeYSide_dx" >
          <notes>Displacement in x of tapes along a side || to Y axis,
                relative to center of LATenv</notes>
          <quo>
            <add>
              <refer refTo="ACDTopTotalX" />
              <refer refTo="tapeThickness" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="tapeYSide_dxN" >
          <notes>Displacement in x of tapes along a side || to Y axis,
                neg direction, relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tapeYSide_dx" />
          </uminus>
        </const>
      </derCategory>

    </derived>
  </constants>
 
  &idDict;

  <section name="LATsection"
           version="1.0" date="2001/3/9" author="J.Bogart"
           topVolume="LAT" >
    <!-- (will) include the 16 towers, grid, and ACD
         Each "tower" has a tracker, a calorimeter, and a mechanical
         piece inbetween. (what about electronics?)
         Each tracker consists of trays
         Each tray has 1 (iff top or bottom) or 2 layers of silicon
         and most trays also have a converter layer (can be of
         two possible thicknesses. -->
    <!-- Use conventions as laid out in Steve Ritz's memo.  Z is
    up (perp. to cal. layers and tracker trays).  An "x-strip"
    is one that measures the x-coordinate of the hit, hence its
    length is parallel to the y-axis.  An "x-log", on the other
    hand, has its long axis parallel to the x-axis (but there 
    is some consistency here: logs make their most precise 
    measurement in the direction parallel to their length.) 
    
    Cal layer numbers increase from the front (largest Z value,
    which is 0 for the Cal) to the back (smallest Z).  Layer 0 
    has x-logs;  layer 7, the last layer, has y-logs.  
    
    Tracker trays and layers are numbered from back to front,
    i.e. increase with increasing Z.  All strips associated
    with a tray (i.e., front side and back side, if the tray 
    is one that has both) have the same orientation.  Even-numbered
    trays have Y-strips and odd-numbered trays have X-strips.

    -->
    <box name="LATenv"
         XREF="LATX" YREF="LATY" ZREF="LATZ" />

<!--    <box name="towers16" 
         XREF="towersTotalX" YREF="towersTotalY" ZREF="towersTotalZ"
         materialREF = "vacuumMat" />
    -->
    <!-- According to conventions above, an unrotated CsIDetector would
    be an X-log -->
    <box name="CsIDetector" 
         sensitive="true"
         XREF="CsILength" YREF="CsIWidth" ZREF="CsIHeight"
         materialREF="crystalMat"  >
      <seg axis="X" nSeg="10" reason="energyAcct" />
    </box>

<!-- there are two kinds of diodes: large and small. See diode section of
     instrument.xml.   These
     diode boxes or oriented the same way as the unrotated CsIDetector
     above.  Old names for x,y,z dimensions were respectively
     thickness,x_width,y_width   -->
    <box name="diodeL"
         sensitive="true"
         XREF="diodeX"     
         YREF="diodeY"
         ZREF="diodeLZ"          
         materialREF="diodeMat" />
    <box name="diodeS"
         sensitive="true"
         XREF="diodeX"     
         YREF="diodeY"
         ZREF="diodeSZ"          
         materialREF="diodeMat" />

    <box name="CsIElementEnv"
         materialREF="CALWrapMat"
         XREF="CsIEnvX"
         YREF="CsIEnvY"
         ZREF="CsIEnvZ"/>

    <!-- This name comes from GlastSim code. -->
    <composition name="CsIElement"  envelope="CsIElementEnv">
      <posXYZ volume="CsIDetector">  <!-- centered in envelope -->
        <idField name="fCALLogCmp" value="eLogXtal" />
      </posXYZ>
      <posXYZ volume="diodeS" 
              XREF="diodeNegXOffset"
              YREF="diodeYOffset"
              ZREF="diodeSZOffset"
        >
        <idField name="fCALLogCmp" valueREF="eDiodeMSmall" />
      </posXYZ>
      <posXYZ volume="diodeS" 
              XREF="diodePosXOffset"
              YREF="diodeYOffset"
              ZREF="diodeSZOffset"
        >
        <idField name="fCALLogCmp" valueREF="eDiodePSmall" />
      </posXYZ>
      <posXYZ volume="diodeL" 
              XREF="diodeNegXOffset"
              YREF="diodeYOffset"
              ZREF="diodeLZOffset"
        >
        <idField name="fCALLogCmp" valueREF="eDiodeMLarge" />
      </posXYZ>
      <posXYZ volume="diodeL" 
              XREF="diodePosXOffset"
              YREF="diodeYOffset"
              ZREF="diodeLZOffset"
        >
        <idField name="fCALLogCmp" valueREF="eDiodePLarge" />
      </posXYZ>
    </composition>

    <!-- make a layer out of some evenly-spaced CsIElements -->
    <stackY name="CALLayer" >
      <axisMPos volume="CsIElement" ncopyREF="nCsIPerLayer"
                gapREF="CALGap" >
        <idField name="fCALLog" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- Need to define spacer box between layers -->
    <box name="CALSpace"
         XREF="CALLayerTrans"
         YREF="CALLayerTrans"
         ZREF="CALInterLayer"
         materialREF="CALSpaceMat"
         />

<!-- intersperse log layers with calSpace boxes.  Volumes get
     added with increasing Z, so we're starting at the back
     with layer 7 (a Y-layer) and working our way forward to
     layer 0, an X layer.  The Y-layers must be rotated -->
    <stackZ name="CALLayers"  >
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="fLayer" value="7" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="fLayer" value="6" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="fLayer" value="5" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="fLayer" value="4" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="fLayer" value="3" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="fLayer" value="2" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="fLayer" value="1" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="fLayer" value="0" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
    </stackZ>

    <!-- Calorimeter for a tower consists of layers plus frame pieces -->
    <!-- Can just embed layers stack into box of frame material -->
    <box name="oneCALEnv"
         XREF="CALFrameWidth"
         YREF="CALFrameWidth"
         ZREF="CALFrameHeight"
         materialREF="CALFrameMat"
         />
    <composition name="oneCAL" envelope="oneCALEnv" >
      <posXYZ volume="CALLayers" />  <!-- centered in envelope -->
    </composition>


<!-- Tracker stuff.  The tracker consists of trays.  Alternate trays
     are rotated by 90 degrees with just vacuum inbetween.  But
     the rotation is not apparent to the simulator since it
     doesn't know about individual strips  -->
<!-- Trays come in 3 flavors: top tray, bottom tray and middle tray.
     These are further subdivided by thickness of converter layer which
     may be any of 
          no converter (bottom and middle trays only)
          super-GLAST thickness (middle only)
          "normal" thickness (middle and top only)  -->
    <box name="convReg" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth" 
	 ZREF="convThickReg"
	 materialREF="convMat" />
    <box name="convSuper" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="convThickSup" 
	 materialREF="convMat" />
    <box name="TKRCoreReg"
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth" 
	 ZREF="coreThick" 
	 materialREF="coreMat" />
    <box name="TKRCoreBottom" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="coreThickBottom" materialREF="coreMat" />
    <!-- box name="TKRCoreNoConv" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="panelThick" materialREF="coreMat" /   -->

<!-- Instead of defining a silicon box, should perhaps make
     a composition or stack(s) defining internal structure
     of ladders and strips.
  -->
    <box name="SiLayerBox"
         sensitive="true"  
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="SiThick" materialREF="TKRDetMat" />

    <choice name="SiLayer" >  
      <case mode="propagate" volume="SiLayerBox" />
      <case mode="digi recon" volume="SiLayerComp" />
    </choice>

  <!-- No explicit material, so vacuum -->
    <box name="SiLayerEnv"    
      XREF="TKRTrayWidth"
      YREF="TKRTrayWidth"
      ZREF="SiThick" 
      materialREF="vacuumMat"/>

<!-- The unrotated wafer is segmented along the x axis, hence measures X,
     hence is an X layer -->
    <box name="SiWaferActive"
         sensitive="true"
	 XREF="SiWaferActiveSide"
	 YREF="SiWaferActiveSide"
	 ZREF="SiThick"
	 materialREF="TKRDetMat">
      <seg axis="X" reason="readout" nSegREF="stripPerWafer" />
    </box>

    <box name="SiWafer"
	 XREF="SiWaferSide"
	 YREF="SiWaferSide"
	 ZREF="SiThick"
	 materialREF="TKRDetMat">
    </box>

    <composition name="SiWaferNest" envelope="SiWafer">
      <posXYZ volume="SiWaferActive" />
    </composition>
    
<!-- identify wafers by their position along stack in direction
     of measurement.                                          
     strip id in glastsim style is then 
           local(in wafer)-strip# + strips-per-wafer * wafer-id
 -->
    <stackX name="waferRow" origin="atCentre" >
      <axisMPos volume="SiWaferNest" ncopyREF="nWaferAcross">
        <idField name="fLadder" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackY name="towerLayerWafers" origin="atCentre" >
      <axisMPos volume="waferRow" ncopyREF="nWaferAcross"/>
    </stackY>

<!-- The collection of wafers is centered in the volume -->
    <composition name="SiLayerComp" envelope="SiLayerEnv">
      <posXYZ volume="towerLayerWafers" />
    </composition>

<!-- actually includes all inactive materials except core, conv -->
    <box name="TKRFaceUpperReg"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickUpperReg" materialREF="TKRFaceMat" />
    <box name="TKRFaceUpperSuper"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickUpperSuper" materialREF="TKRFaceMat" />

    <box name="TKRFaceLowerNoCnv"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickLowerNoCnv" materialREF="TKRFaceMat" />

    <box name="TKRBelowCnv"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickBelowCnv" materialREF="TKRFaceMat" />

    <box name="TKRFaceToCnvSuper"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickToCnvSuper" materialREF="TKRFaceMat" />

    <box name="TKRFaceToCnvReg"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickToCnvReg" materialREF="TKRFaceMat" />
    <box name="TKRFaceOutside"  
	 XREF="faceWidth" 
	 YREF="faceWidth" 
	 ZREF="inactiveThickOutside" materialREF="TKRFaceMat" />

    <!-- Make a stack for the bottom tray -->
    <stackZ name="trayBot" >
      <axisPos volume="TKRFaceOutside" />
      <axisPos volume="TKRCoreBottom" />
      <axisPos volume="TKRFaceUpperReg" />
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiTop" />
      </axisPos>
    </stackZ>

    <!-- Stack for middle no-lead trays -->
    <stackZ name="trayNoConv" >
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiBottom" />
      </axisPos>
      <axisPos volume="TKRFaceLowerNoCnv" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceUpperReg" />
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiTop" /> 
      </axisPos>
    </stackZ>

    <!-- stack for super-GLAST layers -->
    <stackZ name="traySuper" >
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiBottom" />
      </axisPos>
      <axisPos volume="TKRBelowCnv" />
      <axisPos volume="convSuper" >
        <idField name="fTKRTrayCmp" valueREF="eTKRCnv" />
      </axisPos>
      <axisPos volume="TKRFaceToCnvSuper" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceUpperSuper" />
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiTop" />
      </axisPos>
    </stackZ>

    <!-- Regular trays other than top -->
    <stackZ name="trayReg" >
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiBottom" />
      </axisPos>
      <axisPos volume="TKRBelowCnv" />
      <axisPos volume="convReg"  >
        <idField name="fTKRTrayCmp" valueREF="eTKRCnv" />
      </axisPos>
      <axisPos volume="TKRFaceToCnvReg" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceUpperReg" />
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiTop" />
      </axisPos>
    </stackZ>

    <!-- top tray -->
    <stackZ name="trayTop" >
      <axisPos volume="SiLayer" >
	<idField name="fTKRTrayCmp" valueREF="eTKRSiBottom" /> 
      </axisPos>
      <axisPos volume="TKRBelowCnv" />
      <axisPos volume="convReg" >
        <idField name="fTKRTrayCmp" valueREF="eTKRCnv" />
      </axisPos> 
      <axisPos volume="TKRFaceToCnvReg" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceOutside" />
    </stackZ>

    <!-- make a tracker by stacking up the trays -->
    <stackZ name="oneTKR" >
      <axisPos volume="trayBot" rotation="90" >
	<idField name="fTKRTray" value="0" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayNoConv" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="1" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayNoConv" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="2" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="traySuper" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="3" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="traySuper" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="4" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="traySuper" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="5" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="traySuper" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="6" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="7" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="8" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="9" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="10" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="11" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="12" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="13" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="14" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="15" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="16" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="17" />
        <idField name="fMeasure" valueREF="eMeasureX" />
      </axisPos>
      <axisPos volume="trayTop" rotation="90" gapREF="intertrayGap" >
	<idField name="fTKRTray" value="18" />
        <idField name="fMeasure" valueREF="eMeasureY" />
      </axisPos>

    </stackZ>

<!-- next need to put together oneCAL and oneTKR with necessary
     structural stuff to make a tower.  Front plane of grid
     defines Z = 0 (Steve Ritz memo) -->
<!-- For now, just stack up oneCAL and oneTKR, then make a 4x4 array
     Need structural stuff -->
    <stackZ name="oneTower" >
      <axisPos volume="oneCAL">
        <idField name="fTowerObjects" valueREF="eTowerCAL" />
      </axisPos>
      <axisPos volume="oneTKR" gapREF="calTrackerGap" >
        <idField name="fTowerObjects" valueREF="eTowerTKR" />
      </axisPos>
    </stackZ>

<!-- This doesn't behave well w.r.t. ids, but just ignore that for
     now to get a full LAT assembled.  In reality once structural
     entities are really dealt with, probably won't be able to use
     stacks to put the towers together. -->
  
    <stackX name="towerRow" >
      <axisMPos volume="oneTower" ncopyREF="xNum" > 
        <idField name="fTowerX" value="0" step="1" />
<!-- ought to have a gap here, but I don't know what -->
      </axisMPos>
    </stackX>

    <stackY name="allTowers" >
      <axisMPos volume="towerRow" ncopyREF="yNum" >
        <idField name="fTowerY" value="0" step="1" />
<!-- ought to have a gap here, but I don't know what -->
      </axisMPos>
    </stackY>

    <box name="topTile" 
         XREF="ACDTopXWidth"
         YREF="ACDTopYWidth"
         ZREF="tileThickness"
         materialREF="tileMat"
         sensitive="true" />

<!-- different box needed for each of the 4 rows of side tiles on X sides 
     and Y sides (X and Y sides happen to have same dimensions now,
      but allow for difference -->
    <box name="sideTileX0" 
         XREF="sideTileWidthShortXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight0"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX1" 
         XREF="sideTileWidthShortXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight1"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX2" 
         XREF="sideTileWidthLongXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight2"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX3" 
         XREF="sideTileWidthLongXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight3"
         materialREF="tileMat"
         sensitive="true" />

   <!--   ..and Y sides (X and Y sides happen to have same dimensions now,
      but allow for difference.  Also do "rotation" here by putting tile
      thickness in X-dimension (it's in  Y  for sideTileX.. -->
    <box name="sideTileY0" 
         XREF="tileThickness"
         YREF="sideTileWidthShortYRow"
         ZREF="sideTileHeight0"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY1" 
         XREF="tileThickness"
         YREF="sideTileWidthShortYRow"
         ZREF="sideTileHeight1"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY2" 
         XREF="tileThickness"
         YREF="sideTileWidthLongYRow"
         ZREF="sideTileHeight2"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY3" 
         XREF="tileThickness"
         YREF="sideTileWidthLongYRow"
         ZREF="sideTileHeight3"
         materialREF="tileMat"
         sensitive="true" />

<!-- boxes for tape on the top.  Long dimension of tape is 
     parallel to X-axis -->
    <box name="topTapeLong"
         XREF="topTapeLenLong"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />
    <box name="topTapeMedium"
         XREF="topTapeLenMedium"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />
    <box name="topTapeShort"
         XREF="topTapeLenShort"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />

<!-- Boxes for tape on sides.  Definition is for a side parallel to
     X-axis.  Rotate 90 deg. about Z for Y-side  -->
    <box name="sideTapeX"
         XREF="tapeWidth"
         YREF="tapeThickness"
         ZREF="tapeSideLength"
         materialREF="tapeMat"
         sensitive="true" />

    <box name="sideTapeY"
         XREF="tapeThickness"
         YREF="tapeWidth"
         ZREF="tapeSideLength"
         materialREF="tapeMat"
         sensitive="true" />

<!-- Make a row of top tiles.  They're all the same.  Since this
     represents a row of tiles, ids of individual tiles in the row
     differ by which column they're in; hence we have idField "col"
     set here.
     The long axis of the top rows (tape or tiles) is || to the
     Y axis -->
    <stackY name="topTileRow" >
      <axisMPos volume="topTile"
                ncopyREF="numYTopTiles"
                gapREF="topTileGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- Make rows for X sides -->
    <stackX name="sideTileRowX0" >
      <axisMPos volume="sideTileX0"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackX name="sideTileRowX1" >
      <axisMPos volume="sideTileX1"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackX>

<!-- have to do bottom side rows tile by tile since gaps are not uniform -->
    <stackX name="sideTileRowX2" >
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="0" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="1" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="2" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="3" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="4" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="5" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="6" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="7" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="8" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="fCol" value="9" />
      </axisPos>
    </stackX>

    <stackX name="sideTileRowX3" >
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="0" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="1" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="2" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="3" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="4" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="5" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="6" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="7" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="8" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="fCol" value="9" />
      </axisPos>
    </stackX>

<!-- Do same for Y sides -->
    <stackY name="sideTileRowY0" >
      <axisMPos volume="sideTileY0"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="sideTileRowY1" >
      <axisMPos volume="sideTileY1"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- have to do bottom side rows tile by tile since gaps are not uniform -->
    <stackY name="sideTileRowY2" >
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="0" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="1" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="2" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="3" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="4" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="5" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="6" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="7" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="8" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="fCol" value="9" />
      </axisPos>
    </stackY>

    <stackY name="sideTileRowY3" >
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="0" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="1" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="2" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="3" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="4" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="5" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="6" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="7" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="fCol" value="8" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="fCol" value="9" />
      </axisPos>
    </stackY>    <!-- stop sub here!! -->


<!-- we have a row of (widely separated) pieces of tape for each
     row of top tiles.  There are three flavors of such rows, made
     of the 3 different lengths of top tapes.              -->

    <stackY name="topTapeRowLong" >
      <axisMPos volume="topTapeLong"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="topTapeRowMedium" >
      <axisMPos volume="topTapeMedium"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="topTapeRowShort" >
      <axisMPos volume="topTapeShort"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

    <!-- next assemble these pieces (five rows of top tiles,
         two long-tape rows, two medium-tape rows and one
         short-tape row) into the acd top, but first make
         an envelope volume for it                       -->
    <box name="ACDTopEnv" 
         XREF="ACDTopTotalX"
         YREF="ACDTopTotalY"
         ZREF="ACDTopZwidth"
         materialREF="vacuumMat"
         />

<!-- all components are centered w.r.t. Y, so only supply X and Z -->
    <composition name="ACDTop" 
                 envelope="ACDTopEnv">
      <posXYZ volume="topTapeRowLong"
              XREF="topTapeX0_d"
              ZREF="topTapeZLong_d">
        <idField name="fRow" value="0" />
      </posXYZ>
      <posXYZ volume="topTapeRowMedium"
              XREF="topTapeX1_d "
              ZREF="topTapeZMedium_d">
        <idField name="fRow" value="1" />
      </posXYZ>
      <posXYZ volume="topTapeRowShort"
              XREF="topTapeX2_d "
              ZREF="topTapeZShort_d">
        <idField name="fRow" value="2" />
      </posXYZ>

      <posXYZ volume="topTapeRowMedium"
              XREF="topTapeX3_d "
              ZREF="topTapeZMedium_d">
        <idField name="fRow" value="3" />
      </posXYZ>

      <posXYZ volume="topTapeRowLong"
              XREF="topTapeX4_d"
              ZREF="topTapeZLong_d">
        <idField name="fRow" value="4" />
      </posXYZ>

      <posXYZ volume="topTileRow"
              XREF="topTileX0_d"
              ZREF="topTileZEdge_d" >
        <idField name="fRow" value="0" />
      </posXYZ>

      <posXYZ volume="topTileRow"
              XREF="topTileX1_d"
              ZREF="topTileZMedium_d" >
        <idField name="fRow" value="1" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX2_d"
              ZREF="topTileZCenter_d" >
        <idField name="fRow" value="2" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX3_d"
              ZREF="topTileZMedium_d" >
        <idField name="fRow" value="3" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX4_d"
              ZREF="topTileZEdge_d" >
        <idField name="fRow" value="4" />
      </posXYZ>

    </composition>

    <!-- Make the envelope for an X side of tiles -->
    <box name="TileXSideEnv"
         XREF="ACDTotalXSide"
         YREF="tileThickness"
         ZREF="ACDSideHeight" 
         materialREF="vacuumMat"
         />

    <composition name="TileXSide" 
                 envelope="TileXSideEnv" >
      <!-- consists of 4 rows of tiles (long dimension of rows in X) 
         The positioning in Y will be done at the next stage. -->
      <posXYZ volume="sideTileRowX0"
              ZREF="sideTileRow0_d" >
        <idField name="fRow" value="0" />
      </posXYZ>
      <posXYZ volume="sideTileRowX1"
              ZREF="sideTileRow1_d">
        <idField name="fRow" value="1" />
      </posXYZ>
      <posXYZ volume="sideTileRowX2"
              ZREF="sideTileRow2_d">
        <idField name="fRow" value="2" />
      </posXYZ>
      <posXYZ volume="sideTileRowX3"
              ZREF="sideTileRow3_d">
        <idField name="fRow" value="3" />
      </posXYZ>
    </composition>

    <!-- do the same for Y-side rows of tiles -->
    <box name="TileYSideEnv"
         XREF="tileThickness"
         YREF="ACDTotalYSide"
         ZREF="ACDSideHeight" 
         />

    <composition name="TileYSide" 
                 envelope="TileYSideEnv" >
      <!-- consists of 4 rows of tiles (long dimension of rows in Y) 
         The positioning in X will be done at the next stage. -->
      <posXYZ volume="sideTileRowY0"
              ZREF="sideTileRow0_d">
        <idField name="fRow" value="0" />
      </posXYZ>
      <posXYZ volume="sideTileRowY1"
              ZREF="sideTileRow1_d">
        <idField name="fRow" value="1" />
      </posXYZ>
      <posXYZ volume="sideTileRowY2"
              ZREF="sideTileRow2_d">
        <idField name="fRow" value="2" />
      </posXYZ>
      <posXYZ volume="sideTileRowY3"
              ZREF="sideTileRow3_d">
        <idField name="fRow" value="3" />
      </posXYZ>
    </composition>

    <!-- stack up tape for X and Y sides -->
    <stackX name="sideTapeRowX" >
      <axisMPos volume="sideTapeX" ncopyREF="numSideTapes"
                gapREF="betweenSideTapesX">
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackY name="sideTapeRowY" >
      <axisMPos volume="sideTapeY" ncopyREF="numSideTapes"
                gapREF="betweenSideTapesY">
        <idField name="fCol" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- Make a LAT.  Still need an idField for tape components -->
    <composition name="LAT" envelope="LATenv" >
      <posXYZ volume="ACDTop"
              ZREF="ACDTop_d" >
        <idField name="fLATObjects" valueREF="eLATACD" />
        <idField name="fACDFace" valueREF="eACDTopFace" />
      </posXYZ>
      <posXYZ volume="allTowers" 
              ZREF="allTowers_d" >
        <idField name="fLATObjects" valueREF="eLATTowers" />
      </posXYZ>
      <posXYZ volume="TileXSide"
              XREF="ACDSideDovetail_d"
              YREF="tileXSide_dy"
              ZREF="tileSide_dz" >
        <idField name="fLATObjects" valueREF="eLATACD" />
        <idField name="fACDFace" valueREF="eACDXPosFace" />
      </posXYZ>
      <posXYZ volume="TileXSide" 
              XREF="ACDSideDovetail_d"
              YREF="tileXSide_dyN"
              ZREF="tileSide_dz" >
        <idField name="fLATObjects" valueREF="eLATACD" />
        <idField name="fACDFace" valueREF="eACDXNegFace" />
      </posXYZ>
      <posXYZ volume="TileYSide" 
              XREF="tileYSide_dx"
              YREF="ACDSideDovetail_d"
              ZREF="tileSide_dz" >
        <idField name="fLATObjects" valueREF="eLATACD" />
        <idField name="fACDFace" valueREF="eACDYPosFace" />
      </posXYZ>
      <posXYZ volume="TileYSide" 
              XREF="tileYSide_dxN"
              YREF="ACDSideDovetail_d"
              ZREF="tileSide_dz" >
        <idField name="fLATObjects" valueREF="eLATACD" />
        <idField name="fACDFace" valueREF="eACDYNegFace" />
      </posXYZ>
      <posXYZ volume="sideTapeRowX" 
              XREF="ACDSideDovetail_d"
              YREF="tapeXSide_dy"
              ZREF="tapeSide_dz" />
      <posXYZ volume="sideTapeRowX"
              XREF="ACDSideDovetail_d"
              YREF="tapeXSide_dyN"
              ZREF="tapeSide_dz" />
      <posXYZ volume="sideTapeRowY"
              XREF="tapeYSide_dx"
              YREF="ACDSideDovetail_d"
              ZREF="tapeSide_dz" />
      <posXYZ volume="sideTapeRowY"
              XREF="tapeYSide_dxN"
              YREF="ACDSideDovetail_d"
              ZREF="tapeSide_dz" />
    </composition>
  </section>
</gdd>
